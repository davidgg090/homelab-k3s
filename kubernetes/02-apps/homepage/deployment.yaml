# kubernetes/02-apps/homepage/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homelab
  labels:
    app.kubernetes.io/name: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      containers:
        - name: homepage
          image: ghcr.io/gethomepage/homepage:latest # O una versión específica
          imagePullPolicy: IfNotPresent
          # Homepage no necesita PUID/PGID o TZ generalmente, ya que sirve archivos estáticos y su config.
          # Si hubiera problemas de permisos con el volumen de config, se podría añadir securityContext.
          ports:
            - name: http
              containerPort: 3000 # Puerto por defecto de Homepage
              protocol: TCP
          volumeMounts:
            - name: homepage-config
              mountPath: /app/config # Ruta donde Homepage espera sus archivos de configuración
            # Opcional: Si quieres montar el socket de Docker para el widget de Docker
            # - name: docker-socket
            #   mountPath: /var/run/docker.sock
            #   readOnly: true
          # (Opcional) Sondas de Liveness y Readiness
          livenessProbe:
            httpGet:
              path: / # La raíz debería ser suficiente
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: / # La raíz debería ser suficiente
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: homepage-config
          persistentVolumeClaim:
            claimName: homepage-config-pvc # Referencia al PVC que creamos antes
        # Opcional: Si montaste el socket de Docker
        # - name: docker-socket
        #   hostPath:
        #     path: /var/run/docker.sock
        #     type: Socket