# kubernetes/04-network-policies/05-allow-internet-egress.yaml
# Permite acceso a Internet para aplicaciones que lo necesitan
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-internet-http-egress
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: radarr
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8       # Excluye redes privadas
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:  # Mantener DNS
        - podSelector: {}
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
# Similar para Sonarr
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-sonarr-internet-egress
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:  # DNS
        - podSelector: {}
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
# qBittorrent necesita acceso P2P completo
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-qbittorrent-p2p
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: qbittorrent
  policyTypes:
    - Egress
  egress:
    - {}  # Permite todo egress (necesario para P2P)
---
# Jackett necesita acceder a trackers
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-jackett-internet
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: jackett
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:  # DNS
        - podSelector: {}
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
# Bazarr necesita acceder a APIs de subt√≠tulos
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-bazarr-internet
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: bazarr
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:  # DNS
        - podSelector: {}
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
# Overseerr necesita acceder a APIs externas (TMDB, etc)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-overseerr-internet
  namespace: homelab
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: overseerr
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:  # DNS
        - podSelector: {}
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53